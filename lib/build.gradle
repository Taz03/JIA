plugins {
    id "java-library"
    id "maven-publish"
    id "signing"
}

group = "io.github.taz03"
version = "0.2-SNAPSHOT"

java {
    sourceCompatibility = JavaVersion.VERSION_21
}

sourceSets {
    integrationTest {
        compileClasspath += sourceSets.main.output
        runtimeClasspath += sourceSets.main.output
    }
}

configurations {
    integrationTestImplementation.extendsFrom testImplementation
}

repositories {
    mavenCentral()
}

ext {
    jacksonVersion = "2.16.1"
    slf4jVersion = "2.0.11"
    springVersion = "6.1.2"
}

dependencies {
    api "com.fasterxml.jackson.core:jackson-core:$jacksonVersion"
    implementation "com.fasterxml.jackson.core:jackson-databind:$jacksonVersion"
    implementation "com.fasterxml.jackson.core:jackson-annotations:$jacksonVersion"
    implementation "org.slf4j:slf4j-api:$slf4jVersion"
    implementation "org.slf4j:slf4j-simple:$slf4jVersion"

    testImplementation "org.junit.jupiter:junit-jupiter:5.10.1"
    testRuntimeOnly "org.junit.platform:junit-platform-launcher"

    integrationTestImplementation "org.springframework:spring-context:$springVersion"
    integrationTestImplementation "org.springframework:spring-test:$springVersion"
}

tasks.withType(Test).configureEach {
    useJUnitPlatform()

    testLogging {
        exceptionFormat = "full"
    }
}

tasks.register("integrationTest", Test) {
    description = "Runs integration tests."
    group = "verification"

    testClassesDirs = sourceSets.integrationTest.output.classesDirs
    classpath = sourceSets.integrationTest.runtimeClasspath

    systemProperty "verificationCode", System.getProperty("verificationCode")
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            artifactId = "jia"
            from components.java

            pom {
                name = "JIA"
                description = "Java API Wrapper for Instagram Private API"
                url = "https://github.com/Taz03/JIA"

                licenses {
                    license {
                        name = "GNU General Public License v3.0"
                        url = "https://www.gnu.org/licenses/gpl-3.0.txt"
                    }
                }

                developers {
                    developer {
                        id = "Taz03"
                        name = "Tanish Azad"
                        email = "tanishazad03@gmail.com"
                    }
                }

                scm {
                    connection = "scm:git:https://github.com/Taz03/JIA.git"
                    developerConnection = "scm:git:https://github.com/Taz03/JIA.git"
                    url = "https://github.com/Taz03/JIA"
                }
            }
        }
    }

    repositories {
        maven {
            def releasesRepoUrl = "https://s01.oss.sonatype.org/service/local/staging/deploy/maven2/"
            def snapshotsRepoUrl = "https://s01.oss.sonatype.org/content/repositories/snapshots/"
            url = version.endsWith("SNAPSHOT") ? snapshotsRepoUrl : releasesRepoUrl

            credentials {
                username = project.findProperty("ossrhUsername")
                password = project.findProperty("ossrhPassword")
            }
        }
    }
}

signing {
    sign publishing.publications.mavenJava
}

javadoc {
    options.addBooleanOption("html5", true)
}
